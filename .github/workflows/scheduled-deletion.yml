name: Scheduled deletion

on:
  workflow_dispatch:
  schedule:
    - cron: 0 18 * * 1-5

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  cronjob:
    name: Delete programmatically every resource
    runs-on: ubuntu-latest
    strategy:
      # With max-parallel set to 1 and fail-fast set to false, the resulting behavior
      # is that jobs run sequentially and, if one fails, the subsequent jobs run anyway.
      # This is desirable, as the matrix could produce combinations that are not yet
      # implemented, and which, as a result, break the job. Moreover, running jobs in parallel
      # would be problematic, since there is a lock system on the backend storage account
      # which prevents concurrent accesses to the state file. 
      max-parallel: 1
      fail-fast: false
      matrix:
        cloud-provider: ["azure", "aws"]
        module: ["module-get-started", module-terraform-modules-1, module-terraform-locals]
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/
        with:
          cloud-provider: ${{ matrix.cloud-provider }}
          terraform-module: ${{ matrix.module }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-arn-role: ${{ secrets.AWS_ARN_ROLE }}
          aws-default-region: eu-central-1
      
      - name: Terraform destroy
        working-directory: ${{ matrix.cloud-provider }}/${{ matrix.module }}
        timeout-minutes: 2
        run: |
          export ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}
          export ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}
          export ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}
          if [ "${{ matrix.cloud-provider }}" == "azure" ]; then
            terraform destroy -auto-approve -var subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}
          else
            terraform destroy -auto-approve
          fi
